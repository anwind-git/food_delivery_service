services:
  web-app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn shipping_service.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./shipping_service:/shipping_service
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    depends_on:
      - database

  nginx:
    restart: always
    image: nginx:1.19.0-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./shipping_service/static:/usr/share/nginx/html/static
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web-app

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot

  database:
    restart: always
    image: postgres:14.8-alpine
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
    ports:
      - '5432:5432'

  redis:
    restart: always
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_app.app worker --loglevel=ERROR
    volumes:
      - ./shipping_service:/shipping_service
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

  flower:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_app.app flower
    volumes:
      - ./shipping_service:/shipping_service
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"

  delivery:
    build:
      context: .
    hostname: bot
    restart: always
    volumes:
      - ./shipping_service:/shipping_service
    depends_on:
      - database
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
    command: >
      sh -c "python manage.py run_bot"
